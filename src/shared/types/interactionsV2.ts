export type BaseInteraction = {
  id: number
  // type of the interaction
  type: string
  // user content of the interaction
  // for chat, it's the user message
  // for navigate, it's the url
  userContent: string
  // id of the context interaction
  contextId: number | null
  // created at timestamp
  createdAt: number
}

// Chat interaction
// This is a mutable object
export type ChatInteraction = BaseInteraction & ChatState & { type: 'chat' }

export type ChatState = {
  // model used to generate the content
  model: string
  // content generated by the assistant
  assistantContent: string
  // updated at timestamp
  updatedAt: number
}

// Navigation interaction
// This is a mutable object
export type NavInteraction = BaseInteraction & NavState & { type: 'nav' }

export type NavState = {
  // title of the page
  title: string
  // description of the page
  description: string | null
  // favicon url of the page
  favIconUrl: string | null
  // image asset id of the page
  imageAssetId: string | null
  // updated at timestamp
  updatedAt: number
}

export type TimeRange = Partial<{
  before: number
  after: number
}>

export type QueryChatsParams = Partial<{
  contextId: number | null
  created: TimeRange
  updated: TimeRange
  model: string
  limit: number
}>

export type Interaction = ChatInteraction | NavInteraction

export const INTERACTION_IPC_CHANNELS = {
  CREATE_CHAT: 'interaction:createChat',
  CREATE_NAV: 'interaction:createNav',
  GET_INTERACTION: 'interaction:getInteraction',
  GET_CHAT_STATE: 'interaction:getChatState',
  GET_NAV_STATE: 'interaction:getNavState',
  GET_CHATS: 'interaction:getChats',
  GET_CHAT_IDS: 'interaction:getChatIds',
  GET_NAVS_BY_URL: 'interaction:getNavsByUrl',
  GET_NAV_IDS_BY_URL: 'interaction:getNavIdsByUrl',
  APPEND_ASSISTANT_CONTENT: 'interaction:appendAssistantContent',
  UPDATE_NAV_STATE: 'interaction:updateNavState',
} as const

